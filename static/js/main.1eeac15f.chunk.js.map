{"version":3,"sources":["index.js"],"names":["CreateWindowButton","className","onClick","this","props","React","Component","KeyInputManager","state","latestInput","key","onKeyDown","bind","onKeyUp","document","addEventListener","removeEventListener","event","refreshKeyInput","keyCode","setState","FpsManager","timerID","setInterval","frameUpdate","clearInterval","frameUpdateFunction","Game","childWindowHandle","undefined","keyInputs","Array","fill","moveSpeed","createMainWindow","controlChildWindow","isDown","slice","createWindow","moveSpeedX","moveSpeedY","moveBy","url","windowName","windowFeatures","window","open","ReactDOM","render","getElementById"],"mappings":"sNAIMA,G,uLAEF,OACE,4BAAQC,UAAU,gBAAgBC,QAASC,KAAKC,MAAMF,SAAtD,qB,GAH2BG,IAAMC,YAUjCC,E,YACJ,WAAYH,GAAQ,IAAD,8BACjB,4CAAMA,KACDI,MAAQ,CACXC,YAAa,CAAEC,IAAK,GAAIF,MAAO,KAEjC,EAAKG,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBANE,E,iFAUjBE,SAASC,iBAAiB,UAAWZ,KAAKQ,WAC1CG,SAASC,iBAAiB,QAASZ,KAAKU,W,6CAIxCC,SAASE,oBAAoB,UAAWb,KAAKQ,WAC7CG,SAASE,oBAAoB,QAASb,KAAKU,W,gCAGnCI,GACRd,KAAKC,MAAMc,gBAAgBD,EAAME,SAAS,GAC1ChB,KAAKiB,SAAS,CAAEX,YAAa,CAAEC,IAAKO,EAAME,QAASX,MAAO,e,8BAGpDS,GACNd,KAAKC,MAAMc,gBAAgBD,EAAME,SAAS,GAC1ChB,KAAKiB,SAAS,CAAEX,YAAa,CAAEC,IAAKO,EAAME,QAASX,MAAO,a,+BAI1D,OACE,6CACiBL,KAAKK,MAAMC,YAAYC,IADxC,IAC8CP,KAAKK,MAAMC,YAAYD,W,GAjC7CH,IAAMC,WAuC9Be,E,4LACiB,IAAD,OAClBlB,KAAKmB,QAAUC,aAAY,kBAAM,EAAKC,gBAAe,IAAO,M,6CAI5DC,cAActB,KAAKmB,W,oCAKnBnB,KAAKC,MAAMsB,wB,+BAIX,OAAO,S,GAfcrB,IAAMC,WAmBzBqB,E,YACJ,WAAYvB,GAAQ,IAAD,8BACjB,4CAAMA,KACDI,MAAQ,CACXoB,uBAAmBC,EACnBC,UAAWC,MAAM,KAAKC,MAAK,GAC3BC,UAAW,GAEb,EAAKC,iBAAmB,EAAKA,iBAAiBtB,KAAtB,gBACxB,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAKuB,mBAAqB,EAAKA,mBAAmBvB,KAAxB,gBATT,E,6EAYHO,EAASiB,GACvB,IAAMN,EAAY3B,KAAKK,MAAMsB,UAAUO,QACvCP,EAAUX,GAAWiB,EACrBjC,KAAKiB,SAAS,CAAEU,UAAWA,M,yCAI3B3B,KAAKiB,SAAS,CACZQ,kBAAmBU,EAAa,GAAI,SAClC,uF,2CAKJ,GAAInC,KAAKK,MAAMoB,kBAAmB,CAChC,IAAIW,EAAa,EAAGC,EAAa,EAE7BrC,KAAKK,MAAMsB,UAAU,MACvBU,GAAcrC,KAAKK,MAAMyB,WAGvB9B,KAAKK,MAAMsB,UAAU,MACvBU,GAAcrC,KAAKK,MAAMyB,WAGvB9B,KAAKK,MAAMsB,UAAU,MACvBS,GAAcpC,KAAKK,MAAMyB,WAGvB9B,KAAKK,MAAMsB,UAAU,MACvBS,GAAcpC,KAAKK,MAAMyB,YAGvBM,GAAcC,IAChBrC,KAAKK,MAAMoB,kBAAkBa,OAAOF,EAAYC,M,+BAMpD,OACE,yBAAKvC,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACD,EAAD,CAAoBE,QAASC,KAAK+B,oBAEpC,kBAAC3B,EAAD,CAAiBW,gBAAiBf,KAAKe,kBACvC,kBAACG,EAAD,CAAYK,oBAAqBvB,KAAKgC,0B,GA3D3B9B,IAAMC,WAiEzB,SAASgC,EAAaI,EAAKC,EAAYC,GAErC,OADqBC,OAAOC,KAAKJ,EAAKC,EAAYC,GAIpDG,IAASC,OACP,kBAACrB,EAAD,MACAb,SAASmC,eAAe,U","file":"static/js/main.1eeac15f.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass CreateWindowButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <button className=\"create-window\" onClick={this.props.onClick}>\r\n        Create Window\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nclass KeyInputManager extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latestInput: { key: \"\", state: \"\" },\r\n    }\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n    document.addEventListener('keyup', this.onKeyUp);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n    document.removeEventListener('keyup', this.onKeyUp);\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    this.props.refreshKeyInput(event.keyCode, true);\r\n    this.setState({ latestInput: { key: event.keyCode, state: \"is down\" } });\r\n  }\r\n\r\n  onKeyUp(event) {\r\n    this.props.refreshKeyInput(event.keyCode, false);\r\n    this.setState({ latestInput: { key: event.keyCode, state: \"is up\" } });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <h3>\r\n        Latest Input: {this.state.latestInput.key} {this.state.latestInput.state}\r\n      </h3>\r\n    );\r\n  }\r\n}\r\n\r\nclass FpsManager extends React.Component {\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.frameUpdate(), 1000 / 60);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  frameUpdate() {\r\n    // フレームレートに合わせて実行\r\n    this.props.frameUpdateFunction();\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      childWindowHandle: undefined,\r\n      keyInputs: Array(256).fill(false),\r\n      moveSpeed: 5,\r\n    }\r\n    this.createMainWindow = this.createMainWindow.bind(this);\r\n    this.refreshKeyInput = this.refreshKeyInput.bind(this);\r\n    this.controlChildWindow = this.controlChildWindow.bind(this);\r\n  }\r\n\r\n  refreshKeyInput(keyCode, isDown) {\r\n    const keyInputs = this.state.keyInputs.slice();\r\n    keyInputs[keyCode] = isDown;\r\n    this.setState({ keyInputs: keyInputs });\r\n  }\r\n\r\n  createMainWindow() {\r\n    this.setState({\r\n      childWindowHandle: createWindow(\"\", \"_blank\",\r\n        \"left=50,top=50,width=100,height=100,menubar=no,toolbar=no,location=no,status=no\"),\r\n    });\r\n  }\r\n\r\n  controlChildWindow() {\r\n    if (this.state.childWindowHandle) {\r\n      let moveSpeedX = 0, moveSpeedY = 0;\r\n\r\n      if (this.state.keyInputs[38]) { // up\r\n        moveSpeedY -= this.state.moveSpeed;\r\n      }\r\n\r\n      if (this.state.keyInputs[40]) { // down\r\n        moveSpeedY += this.state.moveSpeed;\r\n      }\r\n\r\n      if (this.state.keyInputs[37]) { // left\r\n        moveSpeedX -= this.state.moveSpeed;\r\n      }\r\n\r\n      if (this.state.keyInputs[39]) { // right\r\n        moveSpeedX += this.state.moveSpeed;\r\n      }\r\n\r\n      if (moveSpeedX || moveSpeedY) {\r\n        this.state.childWindowHandle.moveBy(moveSpeedX, moveSpeedY);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"controller\">\r\n          <CreateWindowButton onClick={this.createMainWindow} />\r\n        </div>\r\n        <KeyInputManager refreshKeyInput={this.refreshKeyInput} />\r\n        <FpsManager frameUpdateFunction={this.controlChildWindow} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction createWindow(url, windowName, windowFeatures) {\r\n  const windowHandle = window.open(url, windowName, windowFeatures);\r\n  return windowHandle;\r\n}\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}